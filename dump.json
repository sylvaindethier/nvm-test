[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/api/config.js",
    "memberof": null,
    "longname": "src/api/config.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { join } from 'path'\n\n/**\n * A version refers to any version-like string nvm understands. This includes:\n * - full or partial version numbers, starting with an optional \"v\" (0.10, v0.1.2, v1)\n * - default (built-in) aliases: node, stable, unstable, iojs, system\n * - custom aliases you define with `nvm alias foo`\n * @public\n * @typedef {string} version\n */\n\n/**\n * A command refers to a shell command. Any `$version` string will be replaced\n * by the version in test\n * @public\n * @typedef {string} command\n */\n\n// defaults\nconst filename = '.nvmrc.test'\nconst defaults = {\n  // install: detects version silently, install otherwise\n  install: 'nvm which $version &> /dev/null || nvm install $version',\n  // test: just 'npm test'\n  test: 'npm test',\n  dryRun: false,\n  commands: [],\n}\n\nconst filepath = join(process.cwd(), filename)\nlet rc\ntry {\n  // needed to be resolved at runtime, using require vs. import\n  rc = require(filepath)\n} catch (e) {} // eslint-disable-line no-empty\n\n/**\n * Config from `.nvmrc.test.json` file\n * @public\n * @namespace {Object}   config\n * @type      {Object}\n * @property  {command}  [install=]     - The `install` command.<br> `nvm which $version &> /dev/null || nvm install $version`\n * @property  {command}  [test=]        - The `test` command.<br> `npm test`\n * @property  {boolean}  [dryRun=false] - Whether or not to dry run the test. Echoes the `test` command if true.\n * @property  {string[]} [commands=[]]  - External commands\n * @example\n * {\n *   \"test\": \"echo 'nvm-test version $version'; npm run lint && npm run test\",\n *   \"commands\": [\"travis\"]\n * }\n */\nconst config = Object.assign({}, defaults, rc)\nexport default config\n"
  },
  {
    "__docId__": 1,
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "version",
    "memberof": "src/api/config.js",
    "longname": "src/api/config.js~version",
    "access": "public",
    "description": "A version refers to any version-like string nvm understands. This includes:\n- full or partial version numbers, starting with an optional \"v\" (0.10, v0.1.2, v1)\n- default (built-in) aliases: node, stable, unstable, iojs, system\n- custom aliases you define with `nvm alias foo`",
    "type": {
      "types": [
        "string"
      ],
      "optional": false,
      "name": "version"
    }
  },
  {
    "__docId__": 2,
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "command",
    "memberof": "src/api/config.js",
    "longname": "src/api/config.js~command",
    "access": "public",
    "description": "A command refers to a shell command. Any `$version` string will be replaced\nby the version in test",
    "lineNumber": 20,
    "type": {
      "types": [
        "string"
      ],
      "optional": false,
      "name": "command"
    }
  },
  {
    "__docId__": 3,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "defaults",
    "memberof": "src/api/config.js",
    "longname": "src/api/config.js~defaults",
    "access": null,
    "export": false,
    "importPath": "nvm-test/src/api/config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "filepath",
    "memberof": "src/api/config.js",
    "longname": "src/api/config.js~filepath",
    "access": null,
    "export": false,
    "importPath": "nvm-test/src/api/config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 5,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "config",
    "memberof": "src/api/config.js",
    "longname": "src/api/config.js~config",
    "access": "public",
    "export": true,
    "importPath": "nvm-test/src/api/config.js",
    "importStyle": "config",
    "description": "Config from `.nvmrc.test.json` file",
    "examples": [
      "{\n  \"test\": \"echo 'nvm-test version $version'; npm run lint && npm run test\",\n  \"commands\": [\"travis\"]\n}"
    ],
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@namespace",
        "tagValue": "{Object}   config"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "command"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "",
        "defaultRaw": "",
        "name": "install",
        "description": "The `install` command.<br> `nvm which $version &> /dev/null || nvm install $version`"
      },
      {
        "nullable": null,
        "types": [
          "command"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "",
        "defaultRaw": "",
        "name": "test",
        "description": "The `test` command.<br> `npm test`"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "dryRun",
        "description": "Whether or not to dry run the test. Echoes the `test` command if true."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "commands",
        "description": "External commands"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 6,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/api/hooks.js",
    "memberof": null,
    "longname": "src/api/hooks.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "const isFunction = (fn) => (typeof fn === 'function')\n\n/**\n * Hook\n * @public\n * @typedef {function} Hook\n */\n\n/**\n * Hooks\n * @public\n * @class Hooks\n */\nclass Hooks {\n  /**\n   * Create a Hooks\n   * @param  {Object<string, Hook>} [hooks] - Some hooks\n   * @return {Hooks} - This Hooks\n   */\n  constructor (hooks) {\n    // assign hooks to this\n    Object.assign(this, hooks)\n  }\n}\nexport default Hooks\n\n/**\n * Hookable function, accepts a Hooks as last arguments\n * @public\n * @typedef {function(...args: arguments, hooks: Hooks): Promise} Hookable\n */\n\n/**\n * Makes a function hookable\n * @protected\n * @param  {function} fn - A function to make hookable\n * @throws {TypeError} - When argument is not a function\n * @return {Hookable}  - The Hookable function, {@link Hooks} as last arguments\n */\nexport function hookable (fn) {\n  if (!isFunction(fn)) throw new TypeError('Argument must be a function')\n\n  /**\n   * {@link Hookable} function\n   * @protected\n   * @param  {...arguments} [args]  - The function arguments\n   * @param  {Hooks}        [hooks] - {@link Hooks} (`pre`, `post`, `error`, ...Hooks)\n   * @throws {Error} - When error\n   * @return {*}     - The function return value\n   */\n  return async function hook (...args) {\n    // remove latest hooks from args if any\n    const latest = args[args.length - 1]\n    const hooks = latest instanceof Hooks ? args.pop() : new Hooks()\n    // get 'pre', 'post', 'error', and function hooks\n    const { pre, post, error, ...fnHooks } = hooks\n\n    try {\n      // pre hook\n      if (isFunction(pre)) pre(...args)\n\n      // await for function (call w/ function hooks)\n      const value = await fn(...args.concat(fnHooks))\n\n      // post hook\n      if (isFunction(post)) post(value, ...args)\n\n      // return value from function\n      return value\n    } catch (e) {\n      // error hook\n      if (isFunction(error)) error(e, ...args)\n\n      // re-throw\n      throw e\n    }\n  }\n}\n"
  },
  {
    "__docId__": 7,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "isFunction",
    "memberof": "src/api/hooks.js",
    "longname": "src/api/hooks.js~isFunction",
    "access": null,
    "export": false,
    "importPath": "nvm-test/src/api/hooks.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 8,
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "Hookable",
    "memberof": "src/api/hooks.js",
    "longname": "src/api/hooks.js~Hookable",
    "access": "public",
    "description": "Hookable function, accepts a Hooks as last arguments",
    "type": {
      "types": [
        "function(...args: arguments, hooks: Hooks): Promise"
      ],
      "optional": false,
      "name": "Hookable"
    }
  },
  {
    "__docId__": 9,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "hookable",
    "memberof": "src/api/hooks.js",
    "longname": "src/api/hooks.js~hookable",
    "access": "protected",
    "export": true,
    "importPath": "nvm-test/src/api/hooks.js",
    "importStyle": "{hookable}",
    "description": "Makes a function hookable",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "A function to make hookable"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Hookable"
      ],
      "spread": false,
      "description": "The Hookable function, {@link Hooks} as last arguments"
    },
    "throws": [
      {
        "types": [
          "TypeError"
        ],
        "description": "When argument is not a function"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 10,
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "Hook",
    "memberof": "src/api/hooks.js",
    "longname": "src/api/hooks.js~Hook",
    "access": "public",
    "description": "Hook",
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "Hook"
    }
  },
  {
    "__docId__": 11,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Hooks",
    "memberof": "src/api/hooks.js",
    "longname": "src/api/hooks.js~Hooks",
    "access": "public",
    "export": true,
    "importPath": "nvm-test/src/api/hooks.js",
    "importStyle": "Hooks",
    "description": "Hooks",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Hooks"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 12,
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "Hookable",
    "memberof": "src/api/hooks.js",
    "longname": "src/api/hooks.js~Hookable",
    "access": "public",
    "description": "Hookable function, accepts a Hooks as last arguments",
    "type": {
      "types": [
        "function(...args: arguments, hooks: Hooks): Promise"
      ],
      "optional": false,
      "name": "Hookable"
    }
  },
  {
    "__docId__": 13,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/api/hooks.js~Hooks",
    "longname": "src/api/hooks.js~Hooks#constructor",
    "access": null,
    "description": "Create a Hooks",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object<string, Hook>"
        ],
        "spread": false,
        "optional": true,
        "name": "hooks",
        "description": "Some hooks"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Hooks"
      ],
      "spread": false,
      "description": "This Hooks"
    },
    "generator": false
  },
  {
    "__docId__": 14,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/api/index.js",
    "memberof": null,
    "longname": "src/api/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { exists } from './nvm'\n\n// immediately check if exists, throw error otherwise\n/* istanbul ignore if */\nif (!exists()) throw new Error('Please install from http://nvm.sh')\n\nexport { default as config } from './config'\nexport { default as Hooks } from './hooks'\nexport { default as nvm } from './nvm'\nexport { default as nvmInstall } from './nvm-install'\nexport { default as nvmTest } from './nvm-test'\nexport { default as nvmTestVersion } from './nvm-test-version'\nexport { default as nvmTestVersions } from './nvm-test-versions'\n"
  },
  {
    "__docId__": 15,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/api/nvm-install.js",
    "memberof": null,
    "longname": "src/api/nvm-install.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import nvm from './nvm'\nimport config from './config'\nimport { hookable } from './hooks'\n\n/**\n * Install a Node version with nvm if needed\n * @protected\n * @function nvmInstall\n * @param  {version}            [version='']                    - A Node version to install with nvm\n * @param  {Object}             [config]                        - A {@link config}\n * @param  {{install: command}} [config.install=config.install] - A {@link config} `install` command\n * @param  {Object}             [hooks]                         - An Object of {@link Hooks}\n * @param  {{nvmHooks: Hooks}}  [hooks.nvmHooks]                - {@link nvm} Hooks\n * @return {Promise} - The {@link nvm} Promise\n */\nexport function nvmInstall (\n  version = '',\n  { install = config.install } = {},\n  { nvmHooks } = {}\n) {\n  // raw command is install, replace $version\n  const command = install.replace(/\\$version/g, version)\n  return nvm(command, nvmHooks)\n}\n\n/**\n * {@link Hookable} nvmInstall\n * @public\n * @function nvmInstall\n * @param  {version}            [version='']                    - A Node version to install with nvm\n * @param  {Object}             [config]                        - A {@link config}\n * @param  {{install: command}} [config.install=config.install] - A {@link config} `install` command\n * @param  {Hooks}              [hooks]                         - A {@link nvmInstall} Hooks\n * @param  {{pre: Hook}}        [hooks.pre]                     - A `pre` hook\n * @param  {{post: Hook}}       [hooks.post]                    - A `post` hook\n * @param  {{error: Hook}}      [hooks.error]                   - A `error` hook\n * @param  {{nvmHooks: Hooks}}  [hooks.nvmHooks]                - A {@link nvm} Hooks\n * @return {Promise} - The {@link nvm} Promise\n */\nexport default hookable(nvmInstall)\n// exporting this will fail to document as function w/ esdoc\n"
  },
  {
    "__docId__": 16,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "nvmInstall",
    "memberof": "src/api/nvm-install.js",
    "longname": "src/api/nvm-install.js~nvmInstall",
    "access": "protected",
    "export": true,
    "importPath": "nvm-test/src/api/nvm-install.js",
    "importStyle": "{nvmInstall}",
    "description": "Install a Node version with nvm if needed",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "nvmInstall"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "version"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "version",
        "description": "A Node version to install with nvm"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "config",
        "description": "A {@link config}"
      },
      {
        "nullable": null,
        "types": [
          "{install: command}"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "config.install",
        "defaultRaw": "config.install",
        "name": "config.install",
        "description": "A {@link config} `install` command"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "hooks",
        "description": "An Object of {@link Hooks}"
      },
      {
        "nullable": null,
        "types": [
          "{nvmHooks: Hooks}"
        ],
        "spread": false,
        "optional": true,
        "name": "hooks.nvmHooks",
        "description": "{@link nvm} Hooks"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "The {@link nvm} Promise"
    },
    "generator": false
  },
  {
    "__docId__": 17,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/api/nvm-test-version.js",
    "memberof": null,
    "longname": "src/api/nvm-test-version.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import nvmInstall from './nvm-install'\nimport nvmTest from './nvm-test'\nimport config from './config'\nimport { hookable } from './hooks'\n\n/**\n * Run test using a Node version via nvm\n * @protected\n * @function nvmTestVersion\n * @param  {version}                  [version='']                    - A Node version to use with nvm\n * @param  {Object}                   [config]                        - A {@link config}\n * @param  {{install: command}}       [config.install=config.install] - A {@link config} `install` command\n * @param  {{test: command}}          [config.test=config.test]       - A {@link config} `test` command\n * @param  {{dryRun: boolean}}        [config.dryRun=config.dryRun]   - Wheter or not to dry run the test\n * @param  {Object}                   [hooks]                         - An Object of {@link Hooks}\n * @param  {{nvmInstallHooks: Hooks}} [hooks.nvmInstallHooks]         - {@link nvmInstall} Hooks\n * @param  {{nvmTestHooks: Hooks}}    [hooks.nvmTestHooks]            - {@link nvmTest} Hooks\n * @return {Promise} - The {@link nvmTest} Promise\n */\nexport async function nvmTestVersion (\n  version = '',\n  { install = config.install, test = config.test, dryRun = config.dryRun } = {},\n  { nvmInstallHooks, nvmTestHooks } = {}\n) {\n  // await for nvm install\n  await nvmInstall(version, { install }, nvmInstallHooks)\n\n  // await and return for nvm test\n  return await nvmTest(version, { test, dryRun }, nvmTestHooks)\n}\n\n/**\n * {@link Hookable} nvmTestVersion\n * @public\n * @function nvmTestVersion\n * @param  {version}                  [version='']                    - A Node version to use with nvm\n * @param  {Object}                   [config]                        - A {@link config}\n * @param  {{install: command}}       [config.install=config.install] - A {@link config} `install` command\n * @param  {{test: command}}          [config.test=config.test]       - A {@link config} `test` command\n * @param  {{dryRun: boolean}}        [config.dryRun=config.dryRun]   - Wheter or not to dry run the test\n * @param  {Hooks}                    [hooks]                         - A {@link nvmTestVersion} Hooks\n * @param  {{pre: Hook}}              [hooks.pre]                     - A `pre` hook\n * @param  {{post: Hook}}             [hooks.post]                    - A `post` hook\n * @param  {{error: Hook}}            [hooks.error]                   - A `error` hook\n * @param  {{nvmInstallHooks: Hooks}} [hooks.nvmInstallHooks]         - A {@link nvmInstall} Hooks\n * @param  {{nvmTestHooks: Hooks}}    [hooks.nvmTestHooks]            - A {@link nvmTest} Hooks\n * @return {Promise} - The {@link nvmTest} Promise\n */\nexport default hookable(nvmTestVersion)\n// exporting this will fail to document as function w/ esdoc\n"
  },
  {
    "__docId__": 18,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "nvmTestVersion",
    "memberof": "src/api/nvm-test-version.js",
    "longname": "src/api/nvm-test-version.js~nvmTestVersion",
    "access": "protected",
    "export": true,
    "importPath": "nvm-test/src/api/nvm-test-version.js",
    "importStyle": "{nvmTestVersion}",
    "description": "Run test using a Node version via nvm",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "nvmTestVersion"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "version"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "version",
        "description": "A Node version to use with nvm"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "config",
        "description": "A {@link config}"
      },
      {
        "nullable": null,
        "types": [
          "{install: command}"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "config.install",
        "defaultRaw": "config.install",
        "name": "config.install",
        "description": "A {@link config} `install` command"
      },
      {
        "nullable": null,
        "types": [
          "{test: command}"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "config.test",
        "defaultRaw": "config.test",
        "name": "config.test",
        "description": "A {@link config} `test` command"
      },
      {
        "nullable": null,
        "types": [
          "{dryRun: boolean}"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "config.dryRun",
        "defaultRaw": "config.dryRun",
        "name": "config.dryRun",
        "description": "Wheter or not to dry run the test"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "hooks",
        "description": "An Object of {@link Hooks}"
      },
      {
        "nullable": null,
        "types": [
          "{nvmInstallHooks: Hooks}"
        ],
        "spread": false,
        "optional": true,
        "name": "hooks.nvmInstallHooks",
        "description": "{@link nvmInstall} Hooks"
      },
      {
        "nullable": null,
        "types": [
          "{nvmTestHooks: Hooks}"
        ],
        "spread": false,
        "optional": true,
        "name": "hooks.nvmTestHooks",
        "description": "{@link nvmTest} Hooks"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "The {@link nvmTest} Promise"
    },
    "generator": false
  },
  {
    "__docId__": 19,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/api/nvm-test-versions.js",
    "memberof": null,
    "longname": "src/api/nvm-test-versions.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import nvmTestVersion from './nvm-test-version'\nimport config from './config'\nimport { hookable } from './hooks'\n\n/**\n * Run test using a list of Node versions with nvm.\n * @protected\n * @function nvmTestVersions\n * @param  {version[]}                    [versions=[]]                   - A list of Node versions to use with nvm\n * @param  {Object}                       [config]                        - A {@link config}\n * @param  {{install: command}}           [config.install=config.install] - A {@link config} `install` command\n * @param  {{test: command}}              [config.test=config.test]       - A {@link config} `test` command\n * @param  {{dryRun: boolean}}            [config.dryRun=config.dryRun]   - Wheter or not to dry run the test\n * @param  {Object}                       [hooks]                         - An Object of {@link Hooks}\n * @param  {{nvmTestVersionHooks: Hooks}} [hooks.nvmTestVersionHooks]     - {@link nvmTestVersion} Hooks\n * @return {number} - The process exit code\n */\nexport async function nvmTestVersions (\n  versions = [],\n  { install = config.install, test = config.test, dryRun = config.dryRun } = {},\n  { nvmTestVersionHooks } = {}\n) {\n  let code = 0\n  // empty version if no versions\n  if (!versions.length) versions.push(undefined)\n\n  // as we are using await we cant use .forEach\n  for (let i = 0, len = versions.length; i < len; ++i) {\n    let version = versions[i]\n    try {\n      // await for nvm test version\n      await nvmTestVersion(version, { install, test, dryRun }, nvmTestVersionHooks)\n    } catch (e) {\n      // set code to error\n      code = e\n    }\n  }\n\n  return code\n}\n\n/**\n * {@link Hookable} nvmTestVersions\n * @public\n * @function nvmTestVersions\n * @param  {version[]}                    [versions=['']]                 - A list of Node version to use with nvm\n * @param  {Object}                       [config]                        - A {@link config}\n * @param  {{install: command}}           [config.install=config.install] - A {@link config} `install` command\n * @param  {{test: command}}              [config.test=config.test]       - A {@link config} `test` command\n * @param  {{dryRun: boolean}}            [config.dryRun=config.dryRun]   - Wheter or not to dry run the test\n * @param  {Hooks}                        [hooks]                         - A {@link nvmTestVersions} Hooks\n * @param  {{pre: Hook}}                  [hooks.pre]                     - A `pre` hook\n * @param  {{post: Hook}}                 [hooks.post]                    - A `post` hook\n * @param  {{error: Hook}}                [hooks.error]                   - A `error` hook\n * @param  {{nvmTestVersionHooks: Hooks}} [hooks.nvmTestVersionHooks]     - A {@link nvmTestVersion} Hooks\n * @return {number} - The process exit code\n */\nexport default hookable(nvmTestVersions)\n// exporting this will fail to document as function w/ esdoc\n"
  },
  {
    "__docId__": 20,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "nvmTestVersions",
    "memberof": "src/api/nvm-test-versions.js",
    "longname": "src/api/nvm-test-versions.js~nvmTestVersions",
    "access": "protected",
    "export": true,
    "importPath": "nvm-test/src/api/nvm-test-versions.js",
    "importStyle": "{nvmTestVersions}",
    "description": "Run test using a list of Node versions with nvm.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "nvmTestVersions"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "version[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "versions",
        "description": "A list of Node versions to use with nvm"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "config",
        "description": "A {@link config}"
      },
      {
        "nullable": null,
        "types": [
          "{install: command}"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "config.install",
        "defaultRaw": "config.install",
        "name": "config.install",
        "description": "A {@link config} `install` command"
      },
      {
        "nullable": null,
        "types": [
          "{test: command}"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "config.test",
        "defaultRaw": "config.test",
        "name": "config.test",
        "description": "A {@link config} `test` command"
      },
      {
        "nullable": null,
        "types": [
          "{dryRun: boolean}"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "config.dryRun",
        "defaultRaw": "config.dryRun",
        "name": "config.dryRun",
        "description": "Wheter or not to dry run the test"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "hooks",
        "description": "An Object of {@link Hooks}"
      },
      {
        "nullable": null,
        "types": [
          "{nvmTestVersionHooks: Hooks}"
        ],
        "spread": false,
        "optional": true,
        "name": "hooks.nvmTestVersionHooks",
        "description": "{@link nvmTestVersion} Hooks"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The process exit code"
    },
    "generator": false
  },
  {
    "__docId__": 21,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/api/nvm-test.js",
    "memberof": null,
    "longname": "src/api/nvm-test.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import nvm from './nvm'\nimport config from './config'\nimport { hookable } from './hooks'\n\n/**\n * Wrap a command to use a Node version before\n * @private\n * @function nvmUse\n * @param {command} command - The command to wrap\n * @return {command} - The wrapped command\n */\nconst nvmUse = (command) => (`nvm use $version && ( ${command} )`)\n\n/**\n * Test using a Node version with nvm\n * @protected\n * @function nvmTest\n * @param  {version}           [version='']                  - A Node version to use with nvm\n * @param  {Object}            [config]                      - A {@link config}\n * @param  {{test: command}}   [config.test=config.test]     - A {@link config} `test` command\n * @param  {{dryRun: boolean}} [config.dryRun=config.dryRun] - Wheter or not to dry run the test\n * @param  {Object}            [hooks]                       - An Object of {@link Hooks}\n * @param  {{nvmHooks: Hooks}} [hooks.nvmHooks]              - A {@link nvm} Hooks\n * @return {Promise} - The {@link nvm} Promise\n */\nexport function nvmTest (\n  version = '',\n  { test = config.test, dryRun = config.dryRun } = {},\n  { nvmHooks } = {}\n) {\n  // use the Node version\n  test = nvmUse(test)\n  // apply dryRun if required, just echo the command for now\n  if (dryRun) test = `echo \"Dry run: ${test}\"`\n\n  // raw command is test, replace $version\n  const command = test.replace(/\\$version/g, version)\n  return nvm(command, nvmHooks)\n}\n\n/**\n * {@link Hookable} nvmTest\n * @public\n * @function nvmTest\n * @param  {version}            [version='']                    - A Node version to use with nvm\n * @param  {Object}             [config]                        - A {@link config}\n * @param  {{test: command}}    [config.test=config.test]       - The {@link config} `test` command\n * @param  {{dryRun: boolean}}  [config.dryRun=config.dryRun]   - Wheter or not to dry run the test\n * @param  {Hooks}              [hooks]                         - {@link nvmTest} Hooks\n * @param  {{pre: Hook}}        [hooks.pre]                     - A `pre` hook\n * @param  {{post: Hook}}       [hooks.post]                    - A `post` hook\n * @param  {{error: Hook}}      [hooks.error]                   - A `error` hook\n * @param  {{nvmHooks: Hooks}}  [hooks.nvmHooks]                - {@link nvm} Hooks\n * @return {Promise} - The {@link nvm} Promise\n */\nexport default hookable(nvmTest)\n// exporting this will fail to document as function w/ esdoc\n"
  },
  {
    "__docId__": 22,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "nvmUse",
    "memberof": "src/api/nvm-test.js",
    "longname": "src/api/nvm-test.js~nvmUse",
    "access": "private",
    "export": false,
    "importPath": "nvm-test/src/api/nvm-test.js",
    "importStyle": null,
    "description": "Wrap a command to use a Node version before",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "nvmUse"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "command"
        ],
        "spread": false,
        "optional": false,
        "name": "command",
        "description": "The command to wrap"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "command"
      ],
      "spread": false,
      "description": "The wrapped command"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 23,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "nvmTest",
    "memberof": "src/api/nvm-test.js",
    "longname": "src/api/nvm-test.js~nvmTest",
    "access": "protected",
    "export": true,
    "importPath": "nvm-test/src/api/nvm-test.js",
    "importStyle": "{nvmTest}",
    "description": "Test using a Node version with nvm",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "nvmTest"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "version"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "version",
        "description": "A Node version to use with nvm"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "config",
        "description": "A {@link config}"
      },
      {
        "nullable": null,
        "types": [
          "{test: command}"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "config.test",
        "defaultRaw": "config.test",
        "name": "config.test",
        "description": "A {@link config} `test` command"
      },
      {
        "nullable": null,
        "types": [
          "{dryRun: boolean}"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "config.dryRun",
        "defaultRaw": "config.dryRun",
        "name": "config.dryRun",
        "description": "Wheter or not to dry run the test"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "hooks",
        "description": "An Object of {@link Hooks}"
      },
      {
        "nullable": null,
        "types": [
          "{nvmHooks: Hooks}"
        ],
        "spread": false,
        "optional": true,
        "name": "hooks.nvmHooks",
        "description": "A {@link nvm} Hooks"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "The {@link nvm} Promise"
    },
    "generator": false
  },
  {
    "__docId__": 24,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/api/nvm.js",
    "memberof": null,
    "longname": "src/api/nvm.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { spawn } from 'child_process'\nimport { statSync } from 'fs'\nimport semver from 'semver'\nimport { hookable } from './hooks'\n\nconst bin = process.env.NVM_DIR + '/nvm.sh'\nconst options = {\n  cwd: process.cwd(),\n  env: process.env,\n  stdio: 'inherit',\n  shell: process.env.SHELL,\n}\n\n// 'shell' option introduced in Node v5.7.0\nconst shellOption = semver.satisfies(process.version, '>=5.7.0')\n\n/**\n * Wether or not nvm exists.\n * @protected\n * @return {boolean} - Wether or not nvm exists\n */\nexport function exists () {\n  try {\n    return statSync(bin).isFile()\n  } catch (e) {\n    return false\n  }\n}\n\n/* !esdoc bug\n * The Node ChildProcess\n * @external ChildProcess\n * @see {@link https://nodejs.org/api/child_process.html#child_process_class_childprocess}\n */\n\n/* !esdoc bug\n * The Node EventEmitter, some Node versions do NOT expose the ChildProcess class\n * @external EventEmitter\n * @see {@link https://nodejs.org/api/events.html#events_class_eventemitter}\n */\n\n/**\n * Spawn a shell command with nvm shell.\n * @protected\n * @param  {command} [command=''] - A shell command to spawn\n * @return {(ChildProcess|EventEmitter)} - The spawned nvm command child process\n */\nexport function shell (command = '') {\n  // source (period command) nvm before running the command\n  const cmd = `. ${bin}` + (command ? ` && ${command}` : '')\n\n  // the hole command has to be quoted starting w/ shell option\n  /* istanbul ignore next: depends on process.version */\n  const shcmd = shellOption ? `'${cmd}'` : cmd\n\n  // invoke shell command (-c)\n  const args = ['-c', shcmd]\n  return spawn(process.env.SHELL, args, options)\n}\n\n/**\n * Process a nvm shell command as a Promise.\n * - It will resolve on 'close' code not equals 0.\n * - It will reject on 'error' and 'close' code equals 0.\n * @protected\n * @param  {command} [command=''] - A shell command\n * @return {Promise} - The nvm shell Promise\n */\nexport function nvm (command = '') {\n  return new Promise((resolve, reject) => {\n    shell(command)\n\n    /*\n     * 'error' event is emitted on spawn, kill, or send message Errors\n     * no solution found yet to unit test\n     */\n     // reject on error\n    .on('error', /* istanbul ignore next */ (error) => { reject(error.code || 1) })\n\n    // resolve if code is 0, reject otherwise\n    .on('close', (code) => { (code === 0 ? resolve : reject)(code) })\n  })\n}\n\n/**\n * {@link Hookable} nvm\n * @public\n * @function nvm\n * @param  {command}       [command='']  - A shell command\n * @param  {Hooks}         [hooks]       - {@link nvm} Hooks\n * @param  {{pre: Hook}}   [hooks.pre]   - A `pre` hook\n * @param  {{post: Hook}}  [hooks.post]  - A `post` hook\n * @param  {{error: Hook}} [hooks.error] - A `error` hook\n * @return {Promise} - The {@link nvm} Promise\n */\nexport default hookable(nvm)\n// exporting this will fail to document as function w/ esdoc\n"
  },
  {
    "__docId__": 25,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "bin",
    "memberof": "src/api/nvm.js",
    "longname": "src/api/nvm.js~bin",
    "access": null,
    "export": false,
    "importPath": "nvm-test/src/api/nvm.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 26,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "options",
    "memberof": "src/api/nvm.js",
    "longname": "src/api/nvm.js~options",
    "access": null,
    "export": false,
    "importPath": "nvm-test/src/api/nvm.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 27,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "shellOption",
    "memberof": "src/api/nvm.js",
    "longname": "src/api/nvm.js~shellOption",
    "access": null,
    "export": false,
    "importPath": "nvm-test/src/api/nvm.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 28,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "exists",
    "memberof": "src/api/nvm.js",
    "longname": "src/api/nvm.js~exists",
    "access": "protected",
    "export": true,
    "importPath": "nvm-test/src/api/nvm.js",
    "importStyle": "{exists}",
    "description": "Wether or not nvm exists.",
    "lineNumber": 22,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Wether or not nvm exists"
    },
    "generator": false
  },
  {
    "__docId__": 29,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "shell",
    "memberof": "src/api/nvm.js",
    "longname": "src/api/nvm.js~shell",
    "access": "protected",
    "export": true,
    "importPath": "nvm-test/src/api/nvm.js",
    "importStyle": "{shell}",
    "description": "Spawn a shell command with nvm shell.",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "command"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "command",
        "description": "A shell command to spawn"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ChildProcess",
        "EventEmitter"
      ],
      "spread": false,
      "description": "The spawned nvm command child process"
    },
    "generator": false
  },
  {
    "__docId__": 30,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "nvm",
    "memberof": "src/api/nvm.js",
    "longname": "src/api/nvm.js~nvm",
    "access": "protected",
    "export": true,
    "importPath": "nvm-test/src/api/nvm.js",
    "importStyle": "{nvm}",
    "description": "Process a nvm shell command as a Promise.\n- It will resolve on 'close' code not equals 0.\n- It will reject on 'error' and 'close' code equals 0.",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "command"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "command",
        "description": "A shell command"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "The nvm shell Promise"
    },
    "generator": false
  },
  {
    "__docId__": 31,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/api.js",
    "memberof": null,
    "longname": "src/api.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/** @namespace api */\nexport {\n  config,\n  Hooks,\n  nvm,\n  nvmInstall,\n  nvmTest,\n  nvmTestVersion,\n  nvmTestVersions,\n} from './api/'\n"
  },
  {
    "__docId__": 32,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/bin.js",
    "memberof": null,
    "longname": "src/bin.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import yargs from 'yargs'\nimport { sync as resolveSync } from 'resolve'\nimport { config } from './api'\nimport { buildUsage, patchCommand, __ } from './utils'\n\n// commands had to be required\nconst cmd = require('./command')\nconst usage = __('usage') + buildUsage(cmd) +\n  '\\n  ' + buildUsage({ command: '<command> ', desc: __('external') })\n\nyargs\n  // version from package\n  .version().alias('v', 'version')\n  .help('h').alias('h', 'help')\n  .usage(usage, cmd.options)\n  // all options are global\n  .global(Object.keys(cmd.options))\n\n// add config commands\nconst commands = config.commands\ncommands.forEach((command) => {\n  // resolve command path from running project\n  const path = resolveSync(`nvm-test-command-${command}`, { basedir: process.cwd() })\n  const cmd = require(path)\n  yargs.command(patchCommand(cmd, __('usage')))\n})\n\n// get argv from yargs\nconst argv = yargs.argv\n// handle if not command\nif (commands.indexOf(argv._[0]) === -1) cmd.handler(argv)\n"
  },
  {
    "__docId__": 33,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "cmd",
    "memberof": "src/bin.js",
    "longname": "src/bin.js~cmd",
    "access": null,
    "export": false,
    "importPath": "nvm-test/src/bin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 34,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "usage",
    "memberof": "src/bin.js",
    "longname": "src/bin.js~usage",
    "access": null,
    "export": false,
    "importPath": "nvm-test/src/bin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 35,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "commands",
    "memberof": "src/bin.js",
    "longname": "src/bin.js~commands",
    "access": null,
    "export": false,
    "importPath": "nvm-test/src/bin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 36,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "argv",
    "memberof": "src/bin.js",
    "longname": "src/bin.js~argv",
    "access": null,
    "export": false,
    "importPath": "nvm-test/src/bin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 37,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/command.js",
    "memberof": null,
    "longname": "src/command.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import log from 'npmlog'\nimport { config, nvmTestVersions, Hooks } from './api'\nimport { __ } from './utils'\n\n// set default log level to 'silly' in development NODE_ENV\nif (process.env.NODE_ENV === 'development') log.level = 'silly'\n\n/** @private */\nconst command = '[versions]'\n\n/** @private */\nconst desc = __('desc')\n\n/** @private */\nconst builder = {\n  'i': {\n    alias: 'install',\n    desc: __('options.install'),\n    type: 'string',\n    default: config.install,\n  },\n  't': {\n    alias: 'test',\n    desc: __('options.test'),\n    type: 'string',\n    default: config.test,\n  },\n  'D': {\n    alias: 'dry-run',\n    desc: __('options.dryRun'),\n    type: 'boolean',\n    default: false,\n  },\n  'L': {\n    alias: 'log-level',\n    desc: __('options.logLevel'),\n    type: 'string',\n    choices: Object.keys(log.levels),\n    default: log.level,\n  },\n}\n\n/**\n * Handler\n * @private\n * @param  {Object} argv - The yargs argv\n * @return {Promise} - The nvmTestVersions Promise\n */\nconst handler = (argv) => {\n  // get versions from argv._\n  const versions = argv._\n  // get options\n  const { install, test, dryRun, logLevel } = argv\n\n  // set log heading & level\n  log.heading = 'nvm-test'\n  log.level = logLevel\n\n  log.silly('command', 'argv:', argv)\n\n  // define hooks\n  const pre = (versions, { install, test, dryRun }) => {\n    // info the versions\n    log.info('nvm-test-versions', 'versions', versions.join(', '))\n    // verbose the options\n    log.verbose('nvm-test-versions', 'options', { install, test, dryRun })\n  }\n  const error = (code) => {\n    log.error('nvm-test-versions', 'error code %s', code)\n  }\n  const nvmInstallHooks = new Hooks({\n    pre: (version) => {\n      log.verbose('nvm-install', 'version', version)\n    },\n    error: (code, version) => {\n      log.error('nvm-install', 'error code %s for version', code, version)\n    },\n  })\n  const nvmTestHooks = new Hooks({\n    pre: (version) => {\n      log.verbose('nvm-test', 'version', version)\n    },\n    error: (code, version) => {\n      log.error('nvm-test', 'error code %s for version', code, version)\n    },\n  })\n  const nvmTestVersionHooks = new Hooks({\n    pre: (version) => {\n      // info the version\n      log.info('nvm-test-version', 'version', version)\n    },\n    error: (code, version) => {\n      log.verbose('nvm-test-version', 'error code %s for version', code, version)\n    },\n    nvmInstallHooks,\n    nvmTestHooks,\n  })\n  const hooks = new Hooks({\n    pre,\n    error,\n    nvmTestVersionHooks,\n  })\n\n  // nvm test versions\n  return nvmTestVersions(versions, { install, test, dryRun }, hooks)\n\n  // then exit with code on resolve and reject\n  .then(process.exit, process.exit)\n}\n\n/** @private */\nconst options = builder\nexport { command, desc, options, handler }\n"
  },
  {
    "__docId__": 38,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "builder",
    "memberof": "src/command.js",
    "longname": "src/command.js~builder",
    "access": "private",
    "export": false,
    "importPath": "nvm-test/src/command.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 39,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "command",
    "memberof": "src/command.js",
    "longname": "src/command.js~command",
    "access": "private",
    "export": true,
    "importPath": "nvm-test/src/command.js",
    "importStyle": "{command}",
    "description": null,
    "lineNumber": 9,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 40,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "desc",
    "memberof": "src/command.js",
    "longname": "src/command.js~desc",
    "access": "private",
    "export": true,
    "importPath": "nvm-test/src/command.js",
    "importStyle": "{desc}",
    "description": null,
    "lineNumber": 12,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 41,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "options",
    "memberof": "src/command.js",
    "longname": "src/command.js~options",
    "access": "private",
    "export": true,
    "importPath": "nvm-test/src/command.js",
    "importStyle": "{options}",
    "description": null,
    "lineNumber": 112,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 42,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "handler",
    "memberof": "src/command.js",
    "longname": "src/command.js~handler",
    "access": "private",
    "export": true,
    "importPath": "nvm-test/src/command.js",
    "importStyle": "{handler}",
    "description": "Handler",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "argv",
        "description": "The yargs argv"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "The nvmTestVersions Promise"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 43,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils.js",
    "memberof": null,
    "longname": "src/utils.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import y18n_init from 'y18n'\nimport { name } from '../package'\n\n/**\n * Build a usage string from a command\n * @private\n * @param  {Object} cmd - A command\n * @return {string} - The usage string for the command\n */\nexport function buildUsage (cmd) {\n  // get description from command\n  const desc = cmd.desc || cmd.describe || cmd.description || ''\n\n  return `${name} ${cmd.command} [options] \\t ${desc}`\n}\n\n/**\n * Patch a command - add usage\n * @private\n * @param  {Object} cmd        - A command to patch\n * @param  {string} [usage=''] - A string to prefix usage\n * @return {Object} - The patched command\n */\nexport function patchCommand (cmd, usage = '') {\n  // get builder from command if function\n  // or build builder function from command\n  const fnbuilder = (yargs) => (typeof cmd.builder === 'object'\n    ? yargs.options(cmd.builder) : yargs)\n  const builder = typeof cmd.builder === 'function' ? cmd.builder : fnbuilder\n  cmd.builder = (yargs) => (builder(yargs).usage(usage + buildUsage(cmd)))\n\n  // patch handler to process.exit\n  const handler = cmd.handler\n  cmd.handler = async function (argv) {\n    process.exit(await handler(argv))\n  }\n\n  return cmd\n}\n\n// initialize y18n and get the translation functions\nconst y18n = y18n_init()\nconst { __, __n } = y18n\nexport { y18n, __, __n }\n"
  },
  {
    "__docId__": 44,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "buildUsage",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~buildUsage",
    "access": "private",
    "export": true,
    "importPath": "nvm-test/src/utils.js",
    "importStyle": "{buildUsage}",
    "description": "Build a usage string from a command",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "cmd",
        "description": "A command"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The usage string for the command"
    },
    "generator": false
  },
  {
    "__docId__": 45,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "patchCommand",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~patchCommand",
    "access": "private",
    "export": true,
    "importPath": "nvm-test/src/utils.js",
    "importStyle": "{patchCommand}",
    "description": "Patch a command - add usage",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "cmd",
        "description": "A command to patch"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "usage",
        "description": "A string to prefix usage"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The patched command"
    },
    "generator": false
  },
  {
    "__docId__": 46,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "__",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~__",
    "access": null,
    "export": false,
    "importPath": "nvm-test/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 47,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "y18n",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~y18n",
    "access": null,
    "export": true,
    "importPath": "nvm-test/src/utils.js",
    "importStyle": "{y18n}",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 49,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 50,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 51,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 52,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 53,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 54,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 55,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 56,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 57,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 58,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 59,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 60,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 61,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 62,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 63,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 64,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 65,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 66,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 67,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 68,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 69,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 70,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 71,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 72,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 73,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 74,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 75,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 76,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 77,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 78,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 79,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 80,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 81,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 82,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 83,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 84,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 85,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 86,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 87,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 88,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 89,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 90,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 91,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 92,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 93,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 94,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 95,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 97,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 98,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 99,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 100,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 101,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 102,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 103,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 104,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 105,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/api/00-index.spec.js",
    "memberof": null,
    "longname": "test/api/00-index.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import expect from 'expect'\nimport { renameSync, statSync } from 'fs'\n\n/** @test api */\ndescribe('api', function () {\n  it('sould fail to require if nvm does not exists', function () {\n    // move NVM_DIR\n    const tmp = process.env.NVM_DIR + '.bck'\n    renameSync(process.env.NVM_DIR, tmp)\n\n    expect(function () {\n      if (!statSync(tmp).isDir()) { return }\n      require('../../src/api')\n    }).toThrow()\n\n    // restablish NVM_DIR\n    renameSync(tmp, process.env.NVM_DIR)\n  })\n})\n"
  },
  {
    "__docId__": 106,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe0",
    "testId": 0,
    "memberof": "test/api/00-index.spec.js",
    "testDepth": 0,
    "longname": "test/api/00-index.spec.js~describe0",
    "access": null,
    "description": "api",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "api"
      }
    ],
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 107,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it1",
    "testId": 1,
    "memberof": "test/api/00-index.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/api/00-index.spec.js~describe0.it1",
    "access": null,
    "description": "sould fail to require if nvm does not exists",
    "lineNumber": 6
  },
  {
    "__docId__": 108,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/api/01-hooks.spec.js",
    "memberof": null,
    "longname": "test/api/01-hooks.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import expect from 'expect'\nimport Hooks, { hookable } from '../../src/api/hooks'\n\nconst fn = (...args) => (args)\nconst err = new Error()\nconst throws = () => { throw err }\n\n/** @test Hooks */\ndescribe('Hooks', function () {\n  it('should be call for new instance only', function () {\n    expect(function () { Hooks() }).toThrow()\n    expect(new Hooks()).toBeA(Hooks)\n  })\n\n  it('should have passed in properties', function () {\n    const hooks = new Hooks({ foo: 'foo', bar: 'bar' })\n    expect(Object.keys(hooks)).toEqual(['foo', 'bar'])\n    expect(hooks.foo).toEqual('foo')\n    expect(hooks.bar).toEqual('bar')\n  })\n})\n\n/** @test hookable */\ndescribe('hookable', function () {\n  it('should be a function', function () {\n    expect(hookable).toBeA('function')\n  })\n\n  it('should throw a TypeError if argument is not a function', function () {\n    expect(function () { hookable() }).toThrow(TypeError)\n  })\n\n  it('should return a function (1st level)', function () {\n    expect(hookable(fn)).toBeA('function')\n  })\n\n  it('should return a Promise (2nd level)', function (done) {\n    const p = hookable(fn)()\n    expect(p).toBeA(Promise)\n\n    return p.then(() => {\n      done()\n    })\n    .catch(done)\n  })\n\n  it('should execute a \"pre\" hook', function (done) {\n    const hooks = new Hooks({ pre: () => {} })\n    const spy = expect.spyOn(hooks, 'pre')\n\n    return hookable(fn)('foo', 'bar', hooks)\n    .then(() => {\n      expect(spy).toHaveBeenCalledWith('foo', 'bar')\n      expect.restoreSpies()\n      done()\n    })\n    .catch(done)\n  })\n\n  it('should execute a \"post\" hook', function (done) {\n    const hooks = new Hooks({ post: () => {} })\n    const spy = expect.spyOn(hooks, 'post')\n    const add = (a, b) => (a + b)\n\n    return hookable(add)('foo', 'bar', hooks)\n    .then(() => {\n      expect(spy).toHaveBeenCalledWith('foobar', 'foo', 'bar')\n      expect.restoreSpies()\n      done()\n    })\n    .catch(done)\n  })\n\n  it('should reject and execute an \"error\" hook on Error', function (done) {\n    const hooks = new Hooks({ error: () => {} })\n    const spy = expect.spyOn(hooks, 'error')\n\n    return hookable(throws)('foo', 'bar', hooks)\n    .then(() => {\n      // it should not be resolved on Error, terminate with error\n      done(err)\n    })\n    .catch(() => {\n      expect(spy).toHaveBeenCalledWith(err, 'foo', 'bar')\n      expect.restoreSpies()\n      done()\n    })\n  })\n})\n"
  },
  {
    "__docId__": 109,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe2",
    "testId": 2,
    "memberof": "test/api/01-hooks.spec.js",
    "testDepth": 0,
    "longname": "test/api/01-hooks.spec.js~describe2",
    "access": null,
    "description": "Hooks",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "Hooks"
      }
    ],
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 110,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it3",
    "testId": 3,
    "memberof": "test/api/01-hooks.spec.js~describe2",
    "testDepth": 1,
    "longname": "test/api/01-hooks.spec.js~describe2.it3",
    "access": null,
    "description": "should be call for new instance only",
    "lineNumber": 10
  },
  {
    "__docId__": 111,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it4",
    "testId": 4,
    "memberof": "test/api/01-hooks.spec.js~describe2",
    "testDepth": 1,
    "longname": "test/api/01-hooks.spec.js~describe2.it4",
    "access": null,
    "description": "should have passed in properties",
    "lineNumber": 15
  },
  {
    "__docId__": 112,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe5",
    "testId": 5,
    "memberof": "test/api/01-hooks.spec.js",
    "testDepth": 0,
    "longname": "test/api/01-hooks.spec.js~describe5",
    "access": null,
    "description": "hookable",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "hookable"
      }
    ],
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 113,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it6",
    "testId": 6,
    "memberof": "test/api/01-hooks.spec.js~describe5",
    "testDepth": 1,
    "longname": "test/api/01-hooks.spec.js~describe5.it6",
    "access": null,
    "description": "should be a function",
    "lineNumber": 25
  },
  {
    "__docId__": 114,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it7",
    "testId": 7,
    "memberof": "test/api/01-hooks.spec.js~describe5",
    "testDepth": 1,
    "longname": "test/api/01-hooks.spec.js~describe5.it7",
    "access": null,
    "description": "should throw a TypeError if argument is not a function",
    "lineNumber": 29
  },
  {
    "__docId__": 115,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it8",
    "testId": 8,
    "memberof": "test/api/01-hooks.spec.js~describe5",
    "testDepth": 1,
    "longname": "test/api/01-hooks.spec.js~describe5.it8",
    "access": null,
    "description": "should return a function (1st level)",
    "lineNumber": 33
  },
  {
    "__docId__": 116,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it9",
    "testId": 9,
    "memberof": "test/api/01-hooks.spec.js~describe5",
    "testDepth": 1,
    "longname": "test/api/01-hooks.spec.js~describe5.it9",
    "access": null,
    "description": "should return a Promise (2nd level)",
    "lineNumber": 37
  },
  {
    "__docId__": 117,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it10",
    "testId": 10,
    "memberof": "test/api/01-hooks.spec.js~describe5",
    "testDepth": 1,
    "longname": "test/api/01-hooks.spec.js~describe5.it10",
    "access": null,
    "description": "should execute a \"pre\" hook",
    "lineNumber": 47
  },
  {
    "__docId__": 118,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it11",
    "testId": 11,
    "memberof": "test/api/01-hooks.spec.js~describe5",
    "testDepth": 1,
    "longname": "test/api/01-hooks.spec.js~describe5.it11",
    "access": null,
    "description": "should execute a \"post\" hook",
    "lineNumber": 60
  },
  {
    "__docId__": 119,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it12",
    "testId": 12,
    "memberof": "test/api/01-hooks.spec.js~describe5",
    "testDepth": 1,
    "longname": "test/api/01-hooks.spec.js~describe5.it12",
    "access": null,
    "description": "should reject and execute an \"error\" hook on Error",
    "lineNumber": 74
  },
  {
    "__docId__": 120,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/api/02-nvm.spec.js",
    "memberof": null,
    "longname": "test/api/02-nvm.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import expect from 'expect'\nimport { renameSync } from 'fs'\nimport { nvm, exists, shell } from '../../src/api/nvm'\nimport { shouldReject, shouldResolve } from './helpers/nvm.js'\n\n// ChildProcess class is not exposed under Node 0.12, use EventEmitter instead\nlet ChildProcess = require('child_process').ChildProcess\nif (ChildProcess === undefined) ChildProcess = require('events').EventEmitter\n\n/** @test exists */\ndescribe('exists', function () {\n  it('should be a function', function () {\n    expect(exists).toBeA('function')\n  })\n\n  it('should return false if nvm does not exists', function () {\n    // move NVM_DIR\n    const tmp = process.env.NVM_DIR + '.bck'\n    renameSync(process.env.NVM_DIR, tmp)\n    expect(exists()).toBe(false)\n    // restablish NVM_DIR\n    renameSync(tmp, process.env.NVM_DIR)\n  })\n\n  it('should return true if nvm exists', function () {\n    expect(exists()).toBe(true)\n  })\n})\n\n/** @test shell */\ndescribe('shell', function () {\n  it('should be a function', function () {\n    expect(shell).toBeA('function')\n  })\n\n  it('should return a ChildProcess', function (done) {\n    expect(shell()).toBeA(ChildProcess)\n    done()\n  })\n\n  it('should execute with success', function (done) {\n    shell('echo \"shell test\" > /dev/null')\n    .on('close', done)\n  })\n})\n\n/** @test nvm */\ndescribe('nvm', function () {\n  it('should be a function', function () {\n    expect(nvm).toBeA('function')\n  })\n\n  it('should reject the Promise on Error', function (done) {\n    return shouldReject(nvm('bad-command 2> /dev/null'), done)\n  })\n\n  it('should return and resolve the Promise', function (done) {\n    const p = nvm()\n    expect(p).toBeA(Promise)\n\n    return shouldResolve(p, done)\n  })\n})\n"
  },
  {
    "__docId__": 121,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe13",
    "testId": 13,
    "memberof": "test/api/02-nvm.spec.js",
    "testDepth": 0,
    "longname": "test/api/02-nvm.spec.js~describe13",
    "access": null,
    "description": "exists",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "exists"
      }
    ],
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 122,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it14",
    "testId": 14,
    "memberof": "test/api/02-nvm.spec.js~describe13",
    "testDepth": 1,
    "longname": "test/api/02-nvm.spec.js~describe13.it14",
    "access": null,
    "description": "should be a function",
    "lineNumber": 12
  },
  {
    "__docId__": 123,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it15",
    "testId": 15,
    "memberof": "test/api/02-nvm.spec.js~describe13",
    "testDepth": 1,
    "longname": "test/api/02-nvm.spec.js~describe13.it15",
    "access": null,
    "description": "should return false if nvm does not exists",
    "lineNumber": 16
  },
  {
    "__docId__": 124,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it16",
    "testId": 16,
    "memberof": "test/api/02-nvm.spec.js~describe13",
    "testDepth": 1,
    "longname": "test/api/02-nvm.spec.js~describe13.it16",
    "access": null,
    "description": "should return true if nvm exists",
    "lineNumber": 25
  },
  {
    "__docId__": 125,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe17",
    "testId": 17,
    "memberof": "test/api/02-nvm.spec.js",
    "testDepth": 0,
    "longname": "test/api/02-nvm.spec.js~describe17",
    "access": null,
    "description": "shell",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "shell"
      }
    ],
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 126,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it18",
    "testId": 18,
    "memberof": "test/api/02-nvm.spec.js~describe17",
    "testDepth": 1,
    "longname": "test/api/02-nvm.spec.js~describe17.it18",
    "access": null,
    "description": "should be a function",
    "lineNumber": 32
  },
  {
    "__docId__": 127,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it19",
    "testId": 19,
    "memberof": "test/api/02-nvm.spec.js~describe17",
    "testDepth": 1,
    "longname": "test/api/02-nvm.spec.js~describe17.it19",
    "access": null,
    "description": "should return a ChildProcess",
    "lineNumber": 36
  },
  {
    "__docId__": 128,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it20",
    "testId": 20,
    "memberof": "test/api/02-nvm.spec.js~describe17",
    "testDepth": 1,
    "longname": "test/api/02-nvm.spec.js~describe17.it20",
    "access": null,
    "description": "should execute with success",
    "lineNumber": 41
  },
  {
    "__docId__": 129,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe21",
    "testId": 21,
    "memberof": "test/api/02-nvm.spec.js",
    "testDepth": 0,
    "longname": "test/api/02-nvm.spec.js~describe21",
    "access": null,
    "description": "nvm",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "nvm"
      }
    ],
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 130,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it22",
    "testId": 22,
    "memberof": "test/api/02-nvm.spec.js~describe21",
    "testDepth": 1,
    "longname": "test/api/02-nvm.spec.js~describe21.it22",
    "access": null,
    "description": "should be a function",
    "lineNumber": 49
  },
  {
    "__docId__": 131,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it23",
    "testId": 23,
    "memberof": "test/api/02-nvm.spec.js~describe21",
    "testDepth": 1,
    "longname": "test/api/02-nvm.spec.js~describe21.it23",
    "access": null,
    "description": "should reject the Promise on Error",
    "lineNumber": 53
  },
  {
    "__docId__": 132,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it24",
    "testId": 24,
    "memberof": "test/api/02-nvm.spec.js~describe21",
    "testDepth": 1,
    "longname": "test/api/02-nvm.spec.js~describe21.it24",
    "access": null,
    "description": "should return and resolve the Promise",
    "lineNumber": 57
  },
  {
    "__docId__": 133,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/api/03-nvm-install.spec.js",
    "memberof": null,
    "longname": "test/api/03-nvm-install.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import expect from 'expect'\nimport { nvmInstall } from '../../src/api/nvm-install'\nimport { shouldReject, shouldResolve } from './helpers/nvm.js'\n\n/** @test nvmInstall */\ndescribe('nvmInstall', function () {\n  it('should be a function', function () {\n    expect(nvmInstall).toExist().toBeA('function')\n  })\n\n  it('should reject with no Node version', function (done) {\n    return nvmInstall()\n    .then((code) => {\n      // weird: fails on TravisCI, nvmInstall w/ no Node version reject w/ code 0\n      if (code === 0) done()\n      else done(new Error(`Resolved with code ${code}, it sould NOT`))\n    })\n    .catch((code) => {\n      // exit code should NOT be 0 when Error\n      expect(code).toNotEqual(0)\n      done()\n    })\n  })\n\n  it('should reject with an invalid Node version', function (done) {\n    return shouldReject(nvmInstall('bad-version'), done)\n  })\n\n  it('should resolve with a valid Node version', function (done) {\n    return shouldResolve(nvmInstall(process.version), done)\n  })\n\n  it('should execute an other install command', function (done) {\n    const install = 'nvm which $version > /dev/null'\n    return shouldResolve(nvmInstall(process.version, { install }, {}), done)\n  })\n})\n"
  },
  {
    "__docId__": 134,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe25",
    "testId": 25,
    "memberof": "test/api/03-nvm-install.spec.js",
    "testDepth": 0,
    "longname": "test/api/03-nvm-install.spec.js~describe25",
    "access": null,
    "description": "nvmInstall",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "nvmInstall"
      }
    ],
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 135,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it26",
    "testId": 26,
    "memberof": "test/api/03-nvm-install.spec.js~describe25",
    "testDepth": 1,
    "longname": "test/api/03-nvm-install.spec.js~describe25.it26",
    "access": null,
    "description": "should be a function",
    "lineNumber": 7
  },
  {
    "__docId__": 136,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it27",
    "testId": 27,
    "memberof": "test/api/03-nvm-install.spec.js~describe25",
    "testDepth": 1,
    "longname": "test/api/03-nvm-install.spec.js~describe25.it27",
    "access": null,
    "description": "should reject with no Node version",
    "lineNumber": 11
  },
  {
    "__docId__": 137,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it28",
    "testId": 28,
    "memberof": "test/api/03-nvm-install.spec.js~describe25",
    "testDepth": 1,
    "longname": "test/api/03-nvm-install.spec.js~describe25.it28",
    "access": null,
    "description": "should reject with an invalid Node version",
    "lineNumber": 25
  },
  {
    "__docId__": 138,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it29",
    "testId": 29,
    "memberof": "test/api/03-nvm-install.spec.js~describe25",
    "testDepth": 1,
    "longname": "test/api/03-nvm-install.spec.js~describe25.it29",
    "access": null,
    "description": "should resolve with a valid Node version",
    "lineNumber": 29
  },
  {
    "__docId__": 139,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it30",
    "testId": 30,
    "memberof": "test/api/03-nvm-install.spec.js~describe25",
    "testDepth": 1,
    "longname": "test/api/03-nvm-install.spec.js~describe25.it30",
    "access": null,
    "description": "should execute an other install command",
    "lineNumber": 33
  },
  {
    "__docId__": 140,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/api/04-nvm-test.spec.js",
    "memberof": null,
    "longname": "test/api/04-nvm-test.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import expect from 'expect'\nimport { nvmTest } from '../../src/api/nvm-test'\nimport { shouldReject, shouldResolve } from './helpers/nvm.js'\n\n/** @test nvmTest */\ndescribe('nvmTest', function () {\n  it('should be a function', function () {\n    expect(nvmTest).toExist().toBeA('function')\n  })\n\n  it('should reject with no Node version', function (done) {\n    return shouldReject(nvmTest(), done)\n  })\n\n  it('should reject with an invalid Node version', function (done) {\n    return shouldReject(nvmTest('bad-version'), done)\n  })\n\n  it('should resolve with a valid Node version', function (done) {\n    // need to dry run here, or endless loop\n    return shouldResolve(nvmTest(process.version, { dryRun: true }), done)\n  })\n\n  it('should execute an other test command', function (done) {\n    const test = 'npm --version > /dev/null'\n    return shouldResolve(nvmTest(process.version, { test }, {}), done)\n  })\n})\n"
  },
  {
    "__docId__": 141,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe31",
    "testId": 31,
    "memberof": "test/api/04-nvm-test.spec.js",
    "testDepth": 0,
    "longname": "test/api/04-nvm-test.spec.js~describe31",
    "access": null,
    "description": "nvmTest",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "nvmTest"
      }
    ],
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 142,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it32",
    "testId": 32,
    "memberof": "test/api/04-nvm-test.spec.js~describe31",
    "testDepth": 1,
    "longname": "test/api/04-nvm-test.spec.js~describe31.it32",
    "access": null,
    "description": "should be a function",
    "lineNumber": 7
  },
  {
    "__docId__": 143,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it33",
    "testId": 33,
    "memberof": "test/api/04-nvm-test.spec.js~describe31",
    "testDepth": 1,
    "longname": "test/api/04-nvm-test.spec.js~describe31.it33",
    "access": null,
    "description": "should reject with no Node version",
    "lineNumber": 11
  },
  {
    "__docId__": 144,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it34",
    "testId": 34,
    "memberof": "test/api/04-nvm-test.spec.js~describe31",
    "testDepth": 1,
    "longname": "test/api/04-nvm-test.spec.js~describe31.it34",
    "access": null,
    "description": "should reject with an invalid Node version",
    "lineNumber": 15
  },
  {
    "__docId__": 145,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it35",
    "testId": 35,
    "memberof": "test/api/04-nvm-test.spec.js~describe31",
    "testDepth": 1,
    "longname": "test/api/04-nvm-test.spec.js~describe31.it35",
    "access": null,
    "description": "should resolve with a valid Node version",
    "lineNumber": 19
  },
  {
    "__docId__": 146,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it36",
    "testId": 36,
    "memberof": "test/api/04-nvm-test.spec.js~describe31",
    "testDepth": 1,
    "longname": "test/api/04-nvm-test.spec.js~describe31.it36",
    "access": null,
    "description": "should execute an other test command",
    "lineNumber": 24
  },
  {
    "__docId__": 147,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/api/05-nvm-test-version.spec.js",
    "memberof": null,
    "longname": "test/api/05-nvm-test-version.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import expect from 'expect'\nimport { nvmTestVersion } from '../../src/api/nvm-test-version'\nimport { shouldReject, shouldResolve } from './helpers/nvm.js'\n\n/** @test nvmTestVersion */\ndescribe('nvmTestVersion', function () {\n  it('should be a function', function () {\n    expect(nvmTestVersion).toExist().toBeA('function')\n  })\n\n  it('should reject with no Node version', function (done) {\n    return shouldReject(nvmTestVersion(), done)\n  })\n\n  it('should resolve with a valid Node version', function (done) {\n    // need to dry run here, or endless loop\n    return shouldResolve(nvmTestVersion(process.version, { dryRun: true }), done)\n  })\n\n  it('should execute others install and test commands', function (done) {\n    // need to dry run here, or endless loop\n    return shouldResolve(nvmTestVersion(process.version, {\n      install: 'nvm which $version > /dev/null',\n      test: 'npm --version > /dev/null',\n    }, {}), done)\n  })\n})\n"
  },
  {
    "__docId__": 148,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe37",
    "testId": 37,
    "memberof": "test/api/05-nvm-test-version.spec.js",
    "testDepth": 0,
    "longname": "test/api/05-nvm-test-version.spec.js~describe37",
    "access": null,
    "description": "nvmTestVersion",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "nvmTestVersion"
      }
    ],
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 149,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it38",
    "testId": 38,
    "memberof": "test/api/05-nvm-test-version.spec.js~describe37",
    "testDepth": 1,
    "longname": "test/api/05-nvm-test-version.spec.js~describe37.it38",
    "access": null,
    "description": "should be a function",
    "lineNumber": 7
  },
  {
    "__docId__": 150,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it39",
    "testId": 39,
    "memberof": "test/api/05-nvm-test-version.spec.js~describe37",
    "testDepth": 1,
    "longname": "test/api/05-nvm-test-version.spec.js~describe37.it39",
    "access": null,
    "description": "should reject with no Node version",
    "lineNumber": 11
  },
  {
    "__docId__": 151,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it40",
    "testId": 40,
    "memberof": "test/api/05-nvm-test-version.spec.js~describe37",
    "testDepth": 1,
    "longname": "test/api/05-nvm-test-version.spec.js~describe37.it40",
    "access": null,
    "description": "should resolve with a valid Node version",
    "lineNumber": 15
  },
  {
    "__docId__": 152,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it41",
    "testId": 41,
    "memberof": "test/api/05-nvm-test-version.spec.js~describe37",
    "testDepth": 1,
    "longname": "test/api/05-nvm-test-version.spec.js~describe37.it41",
    "access": null,
    "description": "should execute others install and test commands",
    "lineNumber": 20
  },
  {
    "__docId__": 153,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/api/06-nvm-test-versions.spec.js",
    "memberof": null,
    "longname": "test/api/06-nvm-test-versions.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import expect from 'expect'\nimport { nvmTestVersions } from '../../src/api/nvm-test-versions'\nimport { shouldResolve } from './helpers/nvm.js'\n\n/** @test nvmTestVersions */\ndescribe('nvmTestVersions', function () {\n  it('should be a function', function () {\n    expect(nvmTestVersions).toExist().toBeA('function')\n  })\n\n  it('should return error code with no Node version', function (done) {\n    return nvmTestVersions()\n    .then((code) => {\n      expect(code).toNotEqual(0)\n      done()\n    })\n    .catch((code) => {\n      done(new Error(`Rejected with code ${code}`))\n    })\n  })\n\n  it('should return error code with an invalid Node version', function (done) {\n    return nvmTestVersions(['foo'])\n    .then((code) => {\n      expect(code).toNotEqual(0)\n      done()\n    })\n    .catch((code) => {\n      done(new Error(`Rejected with code ${code}`))\n    })\n  })\n\n  it('should resolve with a valid Node version', function (done) {\n    // need to dry run here, or endless loop\n    return shouldResolve(nvmTestVersions([process.version], { dryRun: true }), done)\n  })\n\n  it('should execute others install and test commands', function (done) {\n    return shouldResolve(nvmTestVersions([process.version], {\n      install: 'nvm which $version > /dev/null',\n      test: 'npm --version > /dev/null',\n    }, {}), done)\n  })\n})\n"
  },
  {
    "__docId__": 154,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe42",
    "testId": 42,
    "memberof": "test/api/06-nvm-test-versions.spec.js",
    "testDepth": 0,
    "longname": "test/api/06-nvm-test-versions.spec.js~describe42",
    "access": null,
    "description": "nvmTestVersions",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "nvmTestVersions"
      }
    ],
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 155,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it43",
    "testId": 43,
    "memberof": "test/api/06-nvm-test-versions.spec.js~describe42",
    "testDepth": 1,
    "longname": "test/api/06-nvm-test-versions.spec.js~describe42.it43",
    "access": null,
    "description": "should be a function",
    "lineNumber": 7
  },
  {
    "__docId__": 156,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it44",
    "testId": 44,
    "memberof": "test/api/06-nvm-test-versions.spec.js~describe42",
    "testDepth": 1,
    "longname": "test/api/06-nvm-test-versions.spec.js~describe42.it44",
    "access": null,
    "description": "should return error code with no Node version",
    "lineNumber": 11
  },
  {
    "__docId__": 157,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it45",
    "testId": 45,
    "memberof": "test/api/06-nvm-test-versions.spec.js~describe42",
    "testDepth": 1,
    "longname": "test/api/06-nvm-test-versions.spec.js~describe42.it45",
    "access": null,
    "description": "should return error code with an invalid Node version",
    "lineNumber": 22
  },
  {
    "__docId__": 158,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it46",
    "testId": 46,
    "memberof": "test/api/06-nvm-test-versions.spec.js~describe42",
    "testDepth": 1,
    "longname": "test/api/06-nvm-test-versions.spec.js~describe42.it46",
    "access": null,
    "description": "should resolve with a valid Node version",
    "lineNumber": 33
  },
  {
    "__docId__": 159,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it47",
    "testId": 47,
    "memberof": "test/api/06-nvm-test-versions.spec.js~describe42",
    "testDepth": 1,
    "longname": "test/api/06-nvm-test-versions.spec.js~describe42.it47",
    "access": null,
    "description": "should execute others install and test commands",
    "lineNumber": 38
  }
]